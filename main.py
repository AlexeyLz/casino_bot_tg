import logging
import asyncio
from database.database_functions import register_user
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import Message
from misc import dp, bot
from handlers import help_commands, user_commands


class Form(StatesGroup):
    number = State()
    bid = State()


@dp.message_handler(commands=['game'])
async def game(message: types.Message, state: FSMContext):
    args = message.get_args().split()
    my_name = message.from_user.username
    my_id = message.from_user.id
    rival_id = args[0]
    bid = args[1]

    await message.answer('–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∏–≥—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    await bot.send_message(int(rival_id),
                           text=f'–í–∞–º –ø—Ä–∏—à–ª–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {my_id} [{my_name}]'
                                f'\n–°—Ç–∞–≤–∫–∞ {bid}'
                                f'\n/accept{my_id} - –ø—Ä–∏–Ω—è—Ç—å'
                                f'\n/decline{my_id} - –æ—Ç–∫–ª–æ–Ω–∏—Ç—å')

    # state_with: FSMContext = dp.current_state(chat=user_id, user=user_id)
    # await state_with.set_state('kek')
    # await state_with.reset_state()
    # current_state = await state_with.get_state()
    # print(current_state)


@dp.message_handler()
async def echo(message: types.Message):
    if message.text.startswith('/accept'):
        dice_emoji = 'üé≤'
        my_id = message.from_user.id
        my_name = message.from_user.username
        rival_id = int(message.text[7:])
        await message.reply(f"–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–ø—Ä–æ—Å –æ—Ç {rival_id}\n–ë—Ä–æ—Å–∞–µ–º –∫—É–±–∏–∫–∏...")
        await bot.send_message(rival_id, f'–°–æ–ø–µ—Ä–Ω–∏–∫ {my_id} [{my_name}] –ø—Ä–∏–Ω—è–ª –∑–∞–ø—Ä–æ—Å –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫–∏')
        rival_dice_result = await bot.send_dice(rival_id, emoji=dice_emoji)
        my_dice_result = await message.answer_dice(emoji=dice_emoji)
        await asyncio.sleep(5)
        if rival_dice_result > my_dice_result:
            pass

        return
    await message.answer("–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, –≤–æ—Ç —Ç–µ–±–µ –ø–æ–º–æ—â—å")

    # dice_result = await message.answer_dice('üé≤')
    # result = await bot.send_dice(message.chat.id, emoji='üéØ')
    # print(result)


if __name__ == '__main__':
    while True:
        try:
            executor.start_polling(dp, skip_updates=True)
        except Exception as e:
            print('Error found', e)
